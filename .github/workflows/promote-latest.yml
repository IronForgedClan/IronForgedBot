name: Promote staging image to latest

on:
  workflow_call:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/ironforgedclan/ironforgedbot

jobs:
  push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    environment: prod

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version
        id: version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Get latest Git tag
        id: get_latest_tag
        run: |
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=${LATEST_TAG}" >> $GITHUB_ENV

      - name: Compare versions
        id: compare_versions
        run: |
          NEW_VERSION=$(echo $VERSION | sed 's/^v//')
          OLD_VERSION=$(echo $LATEST_TAG | sed 's/^v//')

          if [ "$(printf '%s\n' "$OLD_VERSION" "$NEW_VERSION" | sort -V | head -n1)" = "$OLD_VERSION" ] && [ "$NEW_VERSION" != "$OLD_VERSION" ]; then
              echo "new_tag=true" >> $GITHUB_ENV
          else
              echo "new_tag=false" >> $GITHUB_ENV
          fi

      - name: Create git tag
        if: env.new_tag == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          DESCRIPTION=$(git log -1 --pretty=%B)

          git tag -a "v$VERSION" -m "$DESCRIPTION"
          git push origin "v$VERSION"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest build
        run: docker pull ${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Tag as latest
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ env.IMAGE_NAME }}:latest

      - name: Push latest tag to registry
        run: |
          docker push ${{ env.IMAGE_NAME }}:latest

