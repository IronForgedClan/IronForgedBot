name: pull-request

on:
    pull_request:
        branches:
            - main
        types:
            - opened
            - synchronize
            - reopened

jobs:
    unit-test:
        uses: ./.github/workflows/unit-test.yml
        secrets: inherit

    formatting:
        uses: ./.github/workflows/formatting.yml
        secrets: inherit

    version-check:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout PR branch
              uses: actions/checkout@v4

            - name: Read PR version
              id: pr_version
              run: |
                  PR_VERSION=$(cat VERSION | tr -d '\n')
                  echo "PR_VERSION=${PR_VERSION}" >> $GITHUB_ENV
                  echo "PR version: ${PR_VERSION}"

            - name: Checkout main branch
              uses: actions/checkout@v4
              with:
                  ref: main

            - name: Read main version
              id: main_version
              run: |
                  MAIN_VERSION=$(cat VERSION | tr -d '\n')
                  echo "MAIN_VERSION=${MAIN_VERSION}" >> $GITHUB_ENV
                  echo "Main version: ${MAIN_VERSION}"

            - name: Compare versions
              run: |
                  # Parse versions
                  IFS='.' read -r PR_MAJOR PR_MINOR PR_PATCH <<< "$PR_VERSION"
                  IFS='.' read -r MAIN_MAJOR MAIN_MINOR MAIN_PATCH <<< "$MAIN_VERSION"

                  echo "Main: ${MAIN_MAJOR}.${MAIN_MINOR}.${MAIN_PATCH}"
                  echo "PR:   ${PR_MAJOR}.${PR_MINOR}.${PR_PATCH}"

                  HAS_ERROR=false

                  # Check if version is unchanged (warning only, don't fail)
                  if [ "$PR_VERSION" = "$MAIN_VERSION" ]; then
                    MSG="⚠️ Version hasn't been incremented (still ${MAIN_VERSION}). Consider bumping the version in this PR."
                    echo "::warning::${MSG}"
                    echo "${MSG}" >> $GITHUB_STEP_SUMMARY
                    echo "✅ Version check completed with warning" >> $GITHUB_STEP_SUMMARY
                    exit 0
                  fi

                  # Check if version went backwards (error - fail workflow)
                  if [ "$PR_MAJOR" -lt "$MAIN_MAJOR" ] || \
                     ([ "$PR_MAJOR" -eq "$MAIN_MAJOR" ] && [ "$PR_MINOR" -lt "$MAIN_MINOR" ]) || \
                     ([ "$PR_MAJOR" -eq "$MAIN_MAJOR" ] && [ "$PR_MINOR" -eq "$MAIN_MINOR" ] && [ "$PR_PATCH" -lt "$MAIN_PATCH" ]); then
                    MSG="❌ Version decreased from ${MAIN_VERSION} to ${PR_VERSION}. This is not allowed."
                    echo "::error::${MSG}"
                    echo "${MSG}" >> $GITHUB_STEP_SUMMARY
                    exit 1
                  fi

                  # Calculate increment and check if it's more than 1 (error - fail workflow)
                  if [ "$PR_MAJOR" -ne "$MAIN_MAJOR" ]; then
                    MAJOR_DIFF=$((PR_MAJOR - MAIN_MAJOR))
                    if [ "$MAJOR_DIFF" -gt 1 ]; then
                      MSG="❌ Major version incremented by ${MAJOR_DIFF} (${MAIN_VERSION} → ${PR_VERSION}). Maximum increment is 1."
                      echo "::error::${MSG}"
                      echo "${MSG}" >> $GITHUB_STEP_SUMMARY
                      exit 1
                    fi
                  elif [ "$PR_MINOR" -ne "$MAIN_MINOR" ]; then
                    MINOR_DIFF=$((PR_MINOR - MAIN_MINOR))
                    if [ "$MINOR_DIFF" -gt 1 ]; then
                      MSG="❌ Minor version incremented by ${MINOR_DIFF} (${MAIN_VERSION} → ${PR_VERSION}). Maximum increment is 1."
                      echo "::error::${MSG}"
                      echo "${MSG}" >> $GITHUB_STEP_SUMMARY
                      exit 1
                    fi
                  elif [ "$PR_PATCH" -ne "$MAIN_PATCH" ]; then
                    PATCH_DIFF=$((PR_PATCH - MAIN_PATCH))
                    if [ "$PATCH_DIFF" -gt 1 ]; then
                      MSG="❌ Patch version incremented by ${PATCH_DIFF} (${MAIN_VERSION} → ${PR_VERSION}). Maximum increment is 1."
                      echo "::error::${MSG}"
                      echo "${MSG}" >> $GITHUB_STEP_SUMMARY
                      exit 1
                    fi
                  fi

                  echo "✅ Version check passed: ${MAIN_VERSION} → ${PR_VERSION}"
                  echo "✅ Version check passed: ${MAIN_VERSION} → ${PR_VERSION}" >> $GITHUB_STEP_SUMMARY

